#!/bin/bash

#
# Script to compile most documents (markdown, latex etc)
#

usage()
{
    script=${0##*/}
    echo
    echo "Usage of ${script}: "
    echo "----------------"
    echo "$script <document> [to_open?]"
    echo "Compiles document using appropriate tool"
    echo "Also opens the output file if the to_open flag was set by typing 'o'"
    echo "----------------"
    echo
    echo "Error: $1"

    exit 1
}


#TODO: make it so that you can run makenotes from any directory, right now it
#      creates the new pdf in the location of execution and opens the file in the
#      subdirectory
# TODO: Write options for specifying output format
# TODO: Pass additional arguments to this script to the underlying tool

fullfile="$1"
to_open="$2"    # Whether or not output should be opened

filetypeout=".pdf"            # TODO: Write options for specifying output format
filetypein="${fullfile##*.}"  # Input extension
file="${fullfile%.*}"         # Just the filename with no extension

if [ "$file" == "" ] ; then
    usage "No file specified as target"
fi

case "$filetypein" in

    "tex")
        echo 'Regular LaTeX'
        pdflatex $file
        ;;

    "md")
        echo 'Vanilla Markdown'
        makeprg="pandoc --pdf-engine=pdflatex -V geometry:margin=1in"
        $makeprg $fullfile -o $file$filetypeout
        ;;

    "rmd")
        echo 'R Markdown'
        makeprg="Rscript -e \"rmarkdown::render('$fullfile', clean=TRUE)\""
        eval $makeprg
        ;;

    "adoc")
        echo 'Asciidoc'
        makeprg="asciidoctor-pdf"
        $makeprg $fullfile
esac

if [ $? -eq 0 ] && [ "$to_open" ==  "o" ]
then
	$READER "$file$filetypeout"
elif [ "$to_open" != "o" ]
then
	echo -e "\nOpen-file is not set, doing nothing."
else
	echo -e "\nThere was an error in compiling in the file. Output anyway? \(y/*\)"
	read confirm
	if [ "$confirm" == "y" ] || [ "$confirm" == "Y" ]
	then
		$READER "$file$filetypeout"
	fi
fi

echo -e "\nCompleted with status" $?

