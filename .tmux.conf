# Notes:
# * 'bind' aka 'bind-key'
# * 'set' aka 'set-option'
# * 'setw' aka 'set-window-option' (but don't really have to use it?)
# '-g' is for global options and '-ga' appends globally

# TODO: check that you actually mean -g everywhere and not -s/-w

# -------------
# INITIAL SETUP
# -------------

# Set terminal colours
set -g default-terminal xterm-256color

# ----------------
# MAIN KEYBINDINGS
# ----------------

# Set M-f as the command prefix, not C-b
unbind C-b
set -g prefix M-f

# To reload this file
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# --------------
# GLOBAL OPTIONS
# --------------

# For mouse support (scrolling, resizing, etc)
set -g mouse on
# For recognising Tabs etc TODO: this doesn't truly work I think
set -g xterm-keys on
# No delay for escape key press
set -g escape-time 0
# Milliseconds to time-out prefix-mode if you want to repeate binds with -r
set repeat-time 2000

# TODO: check out status-keys

# Use vi motions in copy/paste mode
set -g mode-keys vi
# Enter copy mode with 'Enter' and then choose the mode for selection
bind Enter copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
# Alternatively, choose the mode directly
bind v copy-mode \; send -X begin-selection
bind V copy-mode \; send -X select-line
bind C-v copy-mode \; send -X begin-selection \; send -X rectangle-toggle
# Leave copy-mode with 'Escape'
bind -T copy-mode-vi 'Escape' send -X cancel

# 1) Copy/Paste with xsel and system clipboard
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
#bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# 2) Copy/Paste with xsel and system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# 3) Copy/Paste with tmux clipboard
#bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel
#bind p paste-buffer

# Do not monitor activity
set -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set -g aggressive-resize on

# --------------
# WINDOWS, PANES
# --------------

# Tile all windows equally
bind = select-layout even-horizontal

# Make 0 special 
set -g base-index 0
set -g pane-base-index 1
# Renumber windows if any of them are closed
set -g renumber-windows on

# Splitting windows, and using the same pwd
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# To move between windows
bind -n M-. next-window
bind -n M-, previous-window

# M-f M-f to switch to last used window
bind M-f last-window

# To move windows (-r) is for allowing to do so multiple times
bind -r ( swap-window -t -1
bind -r ) swap-window -t +1

# Kill current one
bind C-x kill-window
bind C-k kill-pane

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-\ select-pane -l

# ----------
# STATUS BAR
# ----------

# Vim's status bar is on the bottom, send tmux's to the top
set -g status-position top
set -g status-justify left
# Update frequency is 2s
set -g status-interval 2

# Background is transparent
set -g status-bg colour235
set -g status-fg green

# Set terminal title
set -g set-titles on
# To "pane_name - window_name"
set -g set-titles-string "#T - #W"

# Prefix indicator
tm_prefix="#{?client_prefix,#[bg=colour245],#[bg=default]}"

# Set window names
set -g window-status-format "#[fg=green]#I:#W#F"
set -g window-status-current-format "#[bold][#I:#W#F]"
set -g window-status-separator "  "

# Set left status bar
set -g status-left-length 50
set -g status-left "#[bold,fg=red]$tm_prefix#(whoami)@#S: "

# Set right status bar
set -g status-right-length 32
tm_battery="#[bold,fg=red]â™¥ #(~/.get_battery.sh)"
tm_internet="#[fg=blue]#(~/.get_internet.sh)"
tm_date="#[bold,fg=colour255]%a, %d %b %R"
set -g status-right "$tm_prefix$tm_date $tm_battery $tm_internet "

# ------------
# TMUX PLUGINS
# ------------

# TPM (Tmux Plugin Manager to manage itself (required)
# Use <Prefix> + I to install new plugins
set -g @plugin 'tmux-plugins/tpm'
# To save and restore sessions across reboots
set -g @plugin 'tmux-plugins/tmux-resurrect'
# To enable search with / and n/N in tmux
set -g @plugin 'tmux-plugins/tmux-copycat'
# Initialize TMUX plugin manager (should bebottom line of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
